# cambiar la ruta a en la que se tiene guardado el toquen !!!!!!!!!!!!!!
# y en la que se guarda los datos en crudo
# y tener instalada la libreria de requests

# PARA IDENTIFICAR LA UID DE CADA ESTACION EN LAS CIUDADES DE LA ZONA METROPOLITANA

import requests

def buscar_aqi(city_name):
    
    # Leer el token
    with open(r"C:\Users\juang\Documents\FCFM\2do Semestre\Programacion Basica\PIA\token_aqicn.txt", "r") as f:
        token = f.read().strip()

    url = f"https://api.waqi.info/feed/{city_name}/?token={token}"
    respuesta = requests.get(url)
    data = respuesta.json()
    if data['data'] != 'Unknown station':
        udi = data['data']['idx']
    else: 
        udi = None
        print("Estacion desconocida")
    
    registro = {"ciudad": city_name, "udi": udi, "data": data}
    return registro

def mostrar_por_contaminante(info):
    while True:
        cont = int(input(f"\nQue contaminante desea buscar en el AMM:\n1. co: Mon贸xido de carbono.\n2. no2: Di贸xido de nitr贸geno.\n3. o3: Ozono.\n4. pm10, pm25: Material particulado.\n5. so2: Di贸xido de azufre.\n6. Terminar de buscar\nSeleccionaste: "))
        if cont == 1:
            for ciudad in info:
                print(f"{ciudad['ciudad']} co: {ciudad['data']['data']['iaqi']['co']['v']}")
        elif cont == 2:
            for ciudad in info:
                print(f"{ciudad['ciudad']} no2: {ciudad['data']['data']['iaqi']['no2']['v']}")
        elif cont == 3:
            for ciudad in info:
                print(f"{ciudad['ciudad']} o3: {ciudad['data']['data']['iaqi']['o3']['v']}")
        elif cont == 4:
            for ciudad in info:
                print(f"{ciudad['ciudad']} pm10: {ciudad['data']['data']['iaqi']['pm10']['v']}")
            for ciudad in info:
                print(f"{ciudad['ciudad']} pm25: {ciudad['data']['data']['iaqi']['pm10']['v']}")                
        elif cont == 5:
            for ciudad in info:
                print(f"{ciudad['ciudad']} so2: {ciudad['data']['data']['iaqi']['so2']['v']}")
        elif cont == 6:
            return
        else:
            print("No existe esa opcion")

def mostrar_aqi_total(info):
    suma = 0
    for ciudad in info:
        print(f"{ciudad['ciudad']} aqi: {ciudad['data']['data']['aqi']}")
        clasificar_aqi(ciudad['data']['data']['aqi'])
        suma += ciudad['data']['data']['aqi']
    
    print(f"Promedio: {suma/len(info)}")

def clasificar_aqi(aqi):
    if aqi < 50:
        print(f"La calidad del aire es buena")
    elif 51 < aqi <= 100:
        print(f"La calidad del aire es moderada")
    elif 100 < aqi <= 150:
        print(f"La calidad del aire es no saludable para grupos sensibles")
    elif 150 < aqi <= 200:
        print(f"La calidad del aire no es saludable")
    elif 200 < aqi <= 300:
        print(f"la calidad del aire no es nada saludable")
    else:
        print(f"La calidad del aire es peligrosa")
    return

def main():
    
    info = []
    ciudades = ['santa-catarina','monterrey','guadalupe','apodaca','juarez','cadereyta','garcia','san-nicolas-de-los-garza','general-escobedo','san-pedro-garza-garcia']
    while True:
        op = int(input("Ingrese alguna opcion\n1. Buscar por nombre de ciudad\n2. Guardar la informacion\n3. Terminar\nSeleccionado: "))
        
        # busca las ciudades ingresadas en la variable ciudades
        if op == 1:
            for ciudad in ciudades:
                datos = buscar_aqi(ciudad)
                info.append(datos)
        
        # guarda la informacion de todas las ciudades 
        elif op == 2:
            # guardar la informacion en crudo
            info_amm = open(r"C:\Users\juang\Documents\FCFM\2do Semestre\Programacion Basica\PIA\info_amm.txt", "w")
            info_amm.write(str(info))
            info_amm.close()
        
        # cerrar el programa
        elif op == 3:
            break

main()
